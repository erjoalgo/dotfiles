#!/bin/bash -x

set -euo pipefail

USAGE=false
SSH_OPTS=${SSH_OPTS:-}

while getopts "u:t:p:i:o:h" OPT; do
    case ${OPT} in
        p)
            REMOTE_PRIVILEGED_USER=${OPTARG}
            ;;
        t)
            SSH_USER_HOST_PORT=${OPTARG}
            ;;
        i)
            IDENTITY_FILE=${OPTARG}
            ;;
        o)
            # extra ssh opts
            SSH_OPTS=${OPTARG}
            ;;
        h)
            USAGE=true
            ;;
    esac
done

REMOTE_PRIVILEGED_USER=${REMOTE_PRIVILEGED_USER:-${USER}}
IDENTITY_FILE=${IDENTITY_FILE:-${HOME}/.ssh/id_rsa.pub}

shift $((OPTIND - 1))

if test ${USAGE} = true -o -z "${SSH_USER_HOST_PORT}"; then
    echo "usage: ssh-copy-id-to-user [-p REMOTE_PRIVILEGED_USER] [-o ssh_extra_opts] \
-t SSH_USER_HOST_PORT [-i IDENTITY_FILE] [CP_DEST_USER...]"
    return 1
fi

if test ${#*} -eq 0; then
    CP_DEST_USERS=${REMOTE_PRIVILEGED_USER}
else
    CP_DEST_USERS=${*}
fi

if ! grep "[.]pub\|[.]pem" <<< "${IDENTITY_FILE}" || ! test -e ${IDENTITY_FILE}; then
    echo "bad identity file: ${IDENTITY_FILE}"
    return 1
fi

SSH_CMD="ssh ${SSH_OPTS} ${SSH_USER_HOST_PORT}"

for REMOTE_USER in $CP_DEST_USERS; do
    echo "as ${REMOTE_PRIVILEGED_USER}, adding to user ${REMOTE_USER} the key ${IDENTITY_FILE}"
    ${SSH_CMD} "sudo -u ${REMOTE_PRIVILEGED_USER} bash -s" <<EOF
set -euxo pipefail
id -u ${REMOTE_USER}
pwd
whoami
cd ~${REMOTE_USER}
pwd
mkdir -p .ssh
cd .ssh
touch authorized_keys && chmod 644 authorized_keys
tee -a authorized_keys <<EOFF
$(cat ${IDENTITY_FILE})
EOFF
chown -R ${REMOTE_USER}:${REMOTE_USER} .
EOF
done

# Local Variables:
# mode: sh-mode
# End:
