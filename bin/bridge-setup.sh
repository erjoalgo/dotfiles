#!/bin/bash -x

set -euo pipefail

# based on https://linuxconfig.org/how-to-use-bridged-networking-with-libvirt-and-kvm

KVM=false

while getopts "p:n:kh" OPT; do
    case ${OPT} in
        p)
            BRIDGE_PORTS=${OPTARG}
            ;;
        n)
            BRIDGE_NAME=${OPTARG}
            ;;
        k)
            # enable KVM setup
            KVM=true
            ;;
        h)
            less $0
            exit 0
            ;;
    esac
done
shift $((OPTIND -1))

sudo apt-get install -y bridge-utils

BRIDGE_NAME=${BRIDGE_NAME}
test -n "${BRIDGE_PORTS:-}"

FILENAME=/etc/network/interfaces.d/${BRIDGE_NAME}
if test -e "${FILENAME}"; then
    read -p"WARNING: bridge already exists. confirm to proceed: "
fi

sudo insert-text-block '# 57466f15-9df9-45eb-b1fb-5886b3f391dc-add-bridge-iface'  \
     "${FILENAME}"<<EOF
# Autogenerated DHCP ip config file for ${BRIDGE_NAME}
auto ${BRIDGE_NAME}

# Bridge setup
iface ${BRIDGE_NAME} inet dhcp
    bridge_ports ${BRIDGE_PORTS}
    bridge_stp off       # disable Spanning Tree Protocol
        bridge_waitport 0    # no delay before a port becomes available
        bridge_fd 0          # no forwarding delay
EOF

sudo ip link add "${BRIDGE_NAME}" type bridge

for IFACE in ${BRIDGE_PORTS}; do
    sudo ip link set "${IFACE}" master "${BRIDGE_NAME}"
done

NETFILTER_CONF=/etc/sysctl.d/99-netfilter-bridge.conf
sudo insert-text-block  \
     '# 8daf9fdc-091f-4cb8-ac08-3eb65bf32327-disable-netfilter-for-bridges'  \
     "${NETFILTER_CONF}" <<EOF
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0
EOF

sudo modprobe br_netfilter

sudo sysctl -p "${NETFILTER_CONF}"

sudo insert-text-block  \
     '# 440a91b1-a18b-4e3c-904a-8415748ba751-enable-br_netfilter-module'  \
     /etc/modules-load.d/br_netfilter.conf <<EOF
br_netfilter
EOF

if test "${KVM:-}" = true; then
    TMPFILE=$(mktemp)
    cat <<EOF > "${TMPFILE}"
<network>
    <name>${BRIDGE_NAME}</name>
    <forward mode="bridge" />
    <bridge name="${BRIDGE_NAME}" />
</network>
EOF
    if ! sudo virsh net-list | grep -F "${BRIDGE_NAME}"; then
        sudo virsh net-define "${TMPFILE}"
    fi
    sudo virsh net-start "${BRIDGE_NAME}" || true
    sudo virsh net-autostart "${BRIDGE_NAME}"
fi
