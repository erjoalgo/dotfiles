#!/bin/bash -x

set -euo pipefail

shift $((OPTIND -1))
COMMAND=docker-${1} && shift

while getopts "r:n:h" OPT; do
    case ${OPT} in
        r)
            REGEXP=${OPTARG}
            ;;
        n)
            CONTAINER_NAME=${OPTARG}
            ;;
        h)
            less $0
            exit 0
            ;;
    esac
done

function __docker-container-lines {
    docker compose ps | sed '1d'
    docker ps | sed '1d'
}

function docker-select-container {
    if test -n "${CONTAINER_NAME:-}"; then
        docker-container-name-to-id "${CONTAINER_NAME:-}"
        return
    fi
    echo "select docker container: " 1>&2
    LINES=$(__docker-container-lines)
    if test -n "${REGEXP:-}"; then
        LINES=$(grep "${REGEXP}" <<< "${OPTIONS}")
    fi
    # IFS=$'\n'
    OPTIONS=$(tr -s ' ' <<< "${LINES}" |  \
                  cut -f2 -d' ')
    select CONTAINER_NAME in $(sort -u  <<< ${OPTIONS}); do
        docker-container-name-to-id "${CONTAINER_NAME}"
        break
    done
}

function docker-container-name-to-id {
    CONTAINER_NAME=${1} && shift
    IFS=$'\n'
    LINES=$(__docker-container-lines)
    for LINE in ${LINES}; do
        NAME=$(tr -s ' ' <<< "${LINE}" | cut -f2 -d' ')
        if test "${CONTAINER_NAME}" = "${NAME}"; then
            # echo "${LINE}" >&2
            CONTAINER_ID=$(cut -f1 -d' ' <<< "${LINE}")
            echo "${CONTAINER_ID}"
            return
        fi
    done
    echo "error: container not found: ${CONTAINER_NAME}" >&2
    return 1
}

function docker-bash {
    CONTAINER=$(docker-select-container)
    docker exec -it --user root "${CONTAINER}" bash
}

function docker-working-dir {
    CONTAINER=${1} && shift
    if ! command -v jq > /dev/null; then
        sudo apt-get install -y jq
    fi
    test -z "${CONTAINER:-}"
    docker inspect "${CONTAINER}" | jq -r '.[0].Config.WorkingDir'
}

function docker-push {
    LOCAL_PATH=${1} && shift
    CONTAINER=$(docker-select-container)
    WORKDIR=$(docker-working-dir "${CONTAINER}")
    docker cp "${LOCAL_PATH}" "${CONTAINER}:${WORKDIR}/"
}

function docker-pull {
    CONTAINER_RELPATH=${1} && shift
    CONTAINER=$(docker-select-container)
    if [[ $CONTAINER_RELPATH =~ /* ]]; then
        WORKDIR=/
    else
        WORKDIR=$(docker-working-dir "${CONTAINER}")
    fi
    docker cp "${CONTAINER}:${WORKDIR}/${CONTAINER_RELPATH}" "./"
}

function docker-kill {
    docker kill $(docker-select-container)
}

${COMMAND} ${*}

# Local Variables:
# mode: sh-mode
# End:
